{"name": "test_user_flow", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@class='selectize-input items not-full has-options focus input-active dropdown-active']\"}\n  (Session info: chrome=124.0.6367.203); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF6391C1522+60802]\n\t(No symbol) [0x00007FF63913AC22]\n\t(No symbol) [0x00007FF638FF7CE4]\n\t(No symbol) [0x00007FF639046D4D]\n\t(No symbol) [0x00007FF639046E1C]\n\t(No symbol) [0x00007FF63908CE37]\n\t(No symbol) [0x00007FF63906ABBF]\n\t(No symbol) [0x00007FF63908A224]\n\t(No symbol) [0x00007FF63906A923]\n\t(No symbol) [0x00007FF639038FEC]\n\t(No symbol) [0x00007FF639039C21]\n\tGetHandleVerifier [0x00007FF6394C41BD+3217949]\n\tGetHandleVerifier [0x00007FF639506157+3488183]\n\tGetHandleVerifier [0x00007FF6394FF0DF+3459391]\n\tGetHandleVerifier [0x00007FF63927B8E6+823622]\n\t(No symbol) [0x00007FF639145FBF]\n\t(No symbol) [0x00007FF639140EE4]\n\t(No symbol) [0x00007FF639141072]\n\t(No symbol) [0x00007FF6391318C4]\n\tBaseThreadInitThunk [0x00007FFAD400257D+29]\n\tRtlUserThreadStart [0x00007FFAD5E4AA48+40]", "trace": "def test_user_flow():\n        # Initialize the WebDriver (change the driver path as needed)\n        driver = webdriver.Chrome()\n    \n        try:\n>           execute_test_with_maximized_screen(driver)\n\nezi_front_end_automation\\test_without_login_process.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nezi_front_end_automation\\test_without_login_process.py:59: in execute_test_with_maximized_screen\n    select_another_service_button = driver.find_element(By.XPATH,\"//div[@class='selectize-input items not-full has-options focus input-active dropdown-active']\")\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000206390A6450>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF6391318C4]\\\\n\\\\tBaseThreadInitThunk [0x00007FFAD400257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFAD5E4AA48+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@class='selectize-input items not-full has-options focus input-active dropdown-active']\"}\nE         (Session info: chrome=124.0.6367.203); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6391C1522+60802]\nE       \t(No symbol) [0x00007FF63913AC22]\nE       \t(No symbol) [0x00007FF638FF7CE4]\nE       \t(No symbol) [0x00007FF639046D4D]\nE       \t(No symbol) [0x00007FF639046E1C]\nE       \t(No symbol) [0x00007FF63908CE37]\nE       \t(No symbol) [0x00007FF63906ABBF]\nE       \t(No symbol) [0x00007FF63908A224]\nE       \t(No symbol) [0x00007FF63906A923]\nE       \t(No symbol) [0x00007FF639038FEC]\nE       \t(No symbol) [0x00007FF639039C21]\nE       \tGetHandleVerifier [0x00007FF6394C41BD+3217949]\nE       \tGetHandleVerifier [0x00007FF639506157+3488183]\nE       \tGetHandleVerifier [0x00007FF6394FF0DF+3459391]\nE       \tGetHandleVerifier [0x00007FF63927B8E6+823622]\nE       \t(No symbol) [0x00007FF639145FBF]\nE       \t(No symbol) [0x00007FF639140EE4]\nE       \t(No symbol) [0x00007FF639141072]\nE       \t(No symbol) [0x00007FF6391318C4]\nE       \tBaseThreadInitThunk [0x00007FFAD400257D+29]\nE       \tRtlUserThreadStart [0x00007FFAD5E4AA48+40]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "attachments": [{"name": "siteload", "source": "d8133841-756a-46d6-96c9-b29c8197a576-attachment.png", "type": "image/png"}, {"name": "search salon", "source": "e722b30b-4818-4ce8-8fb3-5b476ac0a9c2-attachment.png", "type": "image/png"}, {"name": "search name", "source": "c16f0cfe-da69-47dc-954f-ea3af9cf3d72-attachment.png", "type": "image/png"}, {"name": "redirect to search page", "source": "ce587459-83d4-4e74-b695-89d174fcddf9-attachment.png", "type": "image/png"}, {"name": "haircut reserver button click", "source": "bc3f1468-be1e-4688-afb6-a562c37d63ba-attachment.png", "type": "image/png"}, {"name": "professional click", "source": "bedb0225-c0f9-43b8-af39-93477822ad7d-attachment.png", "type": "image/png"}, {"name": "select professional name", "source": "19628a4a-732a-4494-a8d4-f8e0c8091c3d-attachment.png", "type": "image/png"}, {"name": "click_add_a_service_afterwards", "source": "6c9f4311-693e-4832-ad3b-6dcb623b46a5-attachment.png", "type": "image/png"}], "start": 1715707824942, "stop": 1715707859624, "uuid": "6632b4f4-3e00-4d4e-8bb7-63ea677b5083", "historyId": "d12bc6f2e117f535432e26d9b7393386", "testCaseId": "d12bc6f2e117f535432e26d9b7393386", "fullName": "ezi_front_end_automation.test_without_login_process#test_user_flow", "labels": [{"name": "parentSuite", "value": "ezi_front_end_automation"}, {"name": "suite", "value": "test_without_login_process"}, {"name": "host", "value": "Ravi"}, {"name": "thread", "value": "23760-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ezi_front_end_automation.test_without_login_process"}]}