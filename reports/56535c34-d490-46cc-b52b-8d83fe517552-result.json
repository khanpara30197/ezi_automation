{"name": "test_user_flow", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (525, 1128)\n  (Session info: chrome=124.0.6367.119)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7DA521502+60802]\n\t(No symbol) [0x00007FF7DA49AC02]\n\t(No symbol) [0x00007FF7DA357CE4]\n\t(No symbol) [0x00007FF7DA3AE877]\n\t(No symbol) [0x00007FF7DA3AC344]\n\t(No symbol) [0x00007FF7DA3A980A]\n\t(No symbol) [0x00007FF7DA3A89E2]\n\t(No symbol) [0x00007FF7DA39AE8B]\n\t(No symbol) [0x00007FF7DA3CAB7A]\n\t(No symbol) [0x00007FF7DA39A7C6]\n\t(No symbol) [0x00007FF7DA3CAD90]\n\t(No symbol) [0x00007FF7DA3EA224]\n\t(No symbol) [0x00007FF7DA3CA923]\n\t(No symbol) [0x00007FF7DA398FEC]\n\t(No symbol) [0x00007FF7DA399C21]\n\tGetHandleVerifier [0x00007FF7DA82411D+3217821]\n\tGetHandleVerifier [0x00007FF7DA8660B7+3488055]\n\tGetHandleVerifier [0x00007FF7DA85F03F+3459263]\n\tGetHandleVerifier [0x00007FF7DA5DB846+823494]\n\t(No symbol) [0x00007FF7DA4A5F9F]\n\t(No symbol) [0x00007FF7DA4A0EC4]\n\t(No symbol) [0x00007FF7DA4A1052]\n\t(No symbol) [0x00007FF7DA4918A4]\n\tBaseThreadInitThunk [0x00007FFAD37B257D+29]\n\tRtlUserThreadStart [0x00007FFAD5ACAA48+40]", "trace": "def test_user_flow():\n        # Initialize the WebDriver (change the driver path as needed)\n        driver = webdriver.Chrome()\n    \n        try:\n>           execute_test_with_maximized_screen(driver)\n\nezi_front_end_automation\\test_user_flow.py:130: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nezi_front_end_automation\\test_user_flow.py:105: in execute_test_with_maximized_screen\n    select_time=driver.find_element(By.XPATH,\"//a[normalize-space()='11:15']\").click()\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000027DF3CF3350>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF7DA4918A4]\\\\n\\\\tBaseThreadInitThunk [0x00007FFAD37B257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFAD5ACAA48+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (525, 1128)\nE         (Session info: chrome=124.0.6367.119)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7DA521502+60802]\nE       \t(No symbol) [0x00007FF7DA49AC02]\nE       \t(No symbol) [0x00007FF7DA357CE4]\nE       \t(No symbol) [0x00007FF7DA3AE877]\nE       \t(No symbol) [0x00007FF7DA3AC344]\nE       \t(No symbol) [0x00007FF7DA3A980A]\nE       \t(No symbol) [0x00007FF7DA3A89E2]\nE       \t(No symbol) [0x00007FF7DA39AE8B]\nE       \t(No symbol) [0x00007FF7DA3CAB7A]\nE       \t(No symbol) [0x00007FF7DA39A7C6]\nE       \t(No symbol) [0x00007FF7DA3CAD90]\nE       \t(No symbol) [0x00007FF7DA3EA224]\nE       \t(No symbol) [0x00007FF7DA3CA923]\nE       \t(No symbol) [0x00007FF7DA398FEC]\nE       \t(No symbol) [0x00007FF7DA399C21]\nE       \tGetHandleVerifier [0x00007FF7DA82411D+3217821]\nE       \tGetHandleVerifier [0x00007FF7DA8660B7+3488055]\nE       \tGetHandleVerifier [0x00007FF7DA85F03F+3459263]\nE       \tGetHandleVerifier [0x00007FF7DA5DB846+823494]\nE       \t(No symbol) [0x00007FF7DA4A5F9F]\nE       \t(No symbol) [0x00007FF7DA4A0EC4]\nE       \t(No symbol) [0x00007FF7DA4A1052]\nE       \t(No symbol) [0x00007FF7DA4918A4]\nE       \tBaseThreadInitThunk [0x00007FFAD37B257D+29]\nE       \tRtlUserThreadStart [0x00007FFAD5ACAA48+40]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "attachments": [{"name": "siteload", "source": "61a617fb-e68a-4503-bb3d-79b6d73a9086-attachment.png", "type": "image/png"}, {"name": "click_login_button", "source": "13842d03-dea7-41c2-bdb0-427be98dba5f-attachment.png", "type": "image/png"}, {"name": "email and password", "source": "176d270e-fded-481f-ad96-497d9fa4e86b-attachment.png", "type": "image/png"}, {"name": "after login", "source": "e0036c8f-9228-49f1-8914-9091ac3ab235-attachment.png", "type": "image/png"}, {"name": "my appointment page", "source": "d90421c1-8080-4412-a19c-5767c848fe50-attachment.png", "type": "image/png"}, {"name": "past appointment page", "source": "95d488cc-a0a0-49a2-b5ec-7ebc9c2836dd-attachment.png", "type": "image/png"}, {"name": "my favourites page", "source": "92b247ef-6b78-44b5-a4ea-cc70ed2aa5b1-attachment.png", "type": "image/png"}, {"name": "my comment page", "source": "8565c07e-0ad2-455b-9ffb-03e81f36c28c-attachment.png", "type": "image/png"}, {"name": "my profile page", "source": "ffd479ee-54c7-4a9f-bf7e-f20002dcb525-attachment.png", "type": "image/png"}, {"name": "click register button", "source": "f458c185-9e49-4d25-8841-7a31ee2512c9-attachment.png", "type": "image/png"}, {"name": "On click redirect to home page", "source": "744cdd87-0bec-45e4-8166-be7255c12458-attachment.png", "type": "image/png"}, {"name": "search salon", "source": "6e07ff30-c2a2-467d-9140-e5ac004872c8-attachment.png", "type": "image/png"}, {"name": "search name", "source": "e38c8845-5f82-4501-90c9-0457c27395f5-attachment.png", "type": "image/png"}, {"name": "redirect to search page", "source": "c4fb0d6a-4376-4474-a261-ec8fb6175a7d-attachment.png", "type": "image/png"}, {"name": "selected hearicon", "source": "b4f0168f-9a58-4085-9417-49987b365109-attachment.png", "type": "image/png"}, {"name": "haircut reserver button click", "source": "af851e2d-fb0e-42c8-b8d1-48e8b3a1e28d-attachment.png", "type": "image/png"}, {"name": "professional click", "source": "ee56ce6f-9045-451a-a300-4514c54579b3-attachment.png", "type": "image/png"}, {"name": "select professional name", "source": "05c1b043-6f8a-4639-b023-a0408a93a475-attachment.png", "type": "image/png"}, {"name": "click_add_a_service_afterwards", "source": "b5fb522b-af34-49d0-9883-594ff2d5bcfe-attachment.png", "type": "image/png"}, {"name": "select_another_service", "source": "1bad699d-ec73-487b-a346-41783917f98e-attachment.png", "type": "image/png"}, {"name": "select_category_option", "source": "3ed4e7e7-22f8-41a1-bb3e-7d63e3016074-attachment.png", "type": "image/png"}, {"name": "select_face_clean_shave", "source": "9a5d52c2-5146-4e11-8f8e-e1f6735bc65f-attachment.png", "type": "image/png"}, {"name": "select_date", "source": "394a146f-4741-4a42-8ede-bf5080fef230-attachment.png", "type": "image/png"}], "start": 1714842658614, "stop": 1714842723503, "uuid": "9f7e3488-d919-42f8-8f9d-eeae9fe22f9e", "historyId": "d964e673b68a67a41fe795f4f9df1629", "testCaseId": "d964e673b68a67a41fe795f4f9df1629", "fullName": "ezi_front_end_automation.test_user_flow#test_user_flow", "labels": [{"name": "parentSuite", "value": "ezi_front_end_automation"}, {"name": "suite", "value": "test_user_flow"}, {"name": "host", "value": "Ravi"}, {"name": "thread", "value": "17620-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ezi_front_end_automation.test_user_flow"}]}