{"name": "test_user_flow", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (1424, -219)\n  (Session info: chrome=124.0.6367.201)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6F5A81562+60802]\n\t(No symbol) [0x00007FF6F59FAC62]\n\t(No symbol) [0x00007FF6F58B7CE4]\n\t(No symbol) [0x00007FF6F590E877]\n\t(No symbol) [0x00007FF6F590C344]\n\t(No symbol) [0x00007FF6F590980A]\n\t(No symbol) [0x00007FF6F59089E2]\n\t(No symbol) [0x00007FF6F58FAE8B]\n\t(No symbol) [0x00007FF6F592AB7A]\n\t(No symbol) [0x00007FF6F58FA7C6]\n\t(No symbol) [0x00007FF6F592AD90]\n\t(No symbol) [0x00007FF6F594A224]\n\t(No symbol) [0x00007FF6F592A923]\n\t(No symbol) [0x00007FF6F58F8FEC]\n\t(No symbol) [0x00007FF6F58F9C21]\n\tGetHandleVerifier [0x00007FF6F5D841FD+3217949]\n\tGetHandleVerifier [0x00007FF6F5DC6197+3488183]\n\tGetHandleVerifier [0x00007FF6F5DBF11F+3459391]\n\tGetHandleVerifier [0x00007FF6F5B3B926+823622]\n\t(No symbol) [0x00007FF6F5A05FFF]\n\t(No symbol) [0x00007FF6F5A00F24]\n\t(No symbol) [0x00007FF6F5A010B2]\n\t(No symbol) [0x00007FF6F59F1904]\n\tBaseThreadInitThunk [0x00007FFAD400257D+29]\n\tRtlUserThreadStart [0x00007FFAD5E4AA48+40]", "trace": "def test_user_flow():\n        # Initialize the WebDriver (change the driver path as needed)\n        driver = webdriver.Chrome()\n    \n        try:\n>           execute_test_with_maximized_screen(driver)\n\nezi_backend_automation\\test_partner_automation.py:197: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nezi_backend_automation\\test_partner_automation.py:147: in execute_test_with_maximized_screen\n    click_profile_updatebutton=driver.find_element(By.CLASS_NAME,\"btn.btn-primary.Enregistrer_btn.bg-blue.profile_submit\").click()\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000025872185910>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF6F59F1904]\\\\n\\\\tBaseThreadInitThunk [0x00007FFAD400257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFAD5E4AA48+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (1424, -219)\nE         (Session info: chrome=124.0.6367.201)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6F5A81562+60802]\nE       \t(No symbol) [0x00007FF6F59FAC62]\nE       \t(No symbol) [0x00007FF6F58B7CE4]\nE       \t(No symbol) [0x00007FF6F590E877]\nE       \t(No symbol) [0x00007FF6F590C344]\nE       \t(No symbol) [0x00007FF6F590980A]\nE       \t(No symbol) [0x00007FF6F59089E2]\nE       \t(No symbol) [0x00007FF6F58FAE8B]\nE       \t(No symbol) [0x00007FF6F592AB7A]\nE       \t(No symbol) [0x00007FF6F58FA7C6]\nE       \t(No symbol) [0x00007FF6F592AD90]\nE       \t(No symbol) [0x00007FF6F594A224]\nE       \t(No symbol) [0x00007FF6F592A923]\nE       \t(No symbol) [0x00007FF6F58F8FEC]\nE       \t(No symbol) [0x00007FF6F58F9C21]\nE       \tGetHandleVerifier [0x00007FF6F5D841FD+3217949]\nE       \tGetHandleVerifier [0x00007FF6F5DC6197+3488183]\nE       \tGetHandleVerifier [0x00007FF6F5DBF11F+3459391]\nE       \tGetHandleVerifier [0x00007FF6F5B3B926+823622]\nE       \t(No symbol) [0x00007FF6F5A05FFF]\nE       \t(No symbol) [0x00007FF6F5A00F24]\nE       \t(No symbol) [0x00007FF6F5A010B2]\nE       \t(No symbol) [0x00007FF6F59F1904]\nE       \tBaseThreadInitThunk [0x00007FFAD400257D+29]\nE       \tRtlUserThreadStart [0x00007FFAD5E4AA48+40]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "attachments": [{"name": "siteload", "source": "0cffd33d-67e3-4734-8bce-307696a757be-attachment.png", "type": "image/png"}, {"name": "click_login_button", "source": "cde4dfc4-eea6-4619-bc94-5b80face3128-attachment.png", "type": "image/png"}, {"name": "email and password", "source": "b8720e52-c1dd-49a6-803a-e344a3d8f9ea-attachment.png", "type": "image/png"}, {"name": "after login", "source": "0980f45e-bde0-480b-9d66-d777e1743998-attachment.png", "type": "image/png"}, {"name": "click_employee drawer", "source": "f0b1a258-749c-4d29-9d1a-8fff93311c3d-attachment.png", "type": "image/png"}, {"name": "select_employee_name", "source": "c7379e3f-1e00-4f6d-a623-ceef81dd248a-attachment.png", "type": "image/png"}, {"name": "select_employee_name", "source": "41857b37-4ddc-4284-9e6f-ebcbeabb8ef5-attachment.png", "type": "image/png"}, {"name": "click_customer_button", "source": "4f87f885-2a4d-4b0b-a0bf-870fe4c32949-attachment.png", "type": "image/png"}, {"name": "click_importer_button", "source": "758c5a90-ccce-44ea-8127-83451f292d37-attachment.png", "type": "image/png"}, {"name": "click_download_button", "source": "6da6c6ac-affc-4e36-aee7-c6d829711160-attachment.png", "type": "image/png"}, {"name": "click_client button", "source": "fa92e2d2-d6b9-4ea6-a126-d9c98e9da144-attachment.png", "type": "image/png"}, {"name": "search_partner_name", "source": "f2505654-ec8f-464a-8cc9-651dd247dc93-attachment.png", "type": "image/png"}, {"name": "click_search_name", "source": "cb7055b2-9ed9-4726-8c9a-a02e56c433f3-attachment.png", "type": "image/png"}, {"name": " click_rendez_vous", "source": "80b0fa73-5946-4cf8-bfae-3a90bdd8e245-attachment.png", "type": "image/png"}, {"name": "click_commenter", "source": "e3f8d9e9-7148-40af-b015-fc925af63c1f-attachment.png", "type": "image/png"}, {"name": "click_in_regards", "source": "9d150d30-3706-4bd5-8523-802da0d48f82-attachment.png", "type": "image/png"}, {"name": "click_edit_customer_details", "source": "bfa85d46-9b0d-4d6b-a89b-03559085a57d-attachment.png", "type": "image/png"}, {"name": "click_lastname_box", "source": "96019f16-85db-466b-8a1d-5221753d929d-attachment.png", "type": "image/png"}, {"name": "click_date0fbirth_box", "source": "9fb264f4-608d-49b2-bc73-977cb665d4ae-attachment.png", "type": "image/png"}], "start": 1715492286099, "stop": 1715492345586, "uuid": "40f7aa82-dc3d-4b35-80f9-18432cb7a6d5", "historyId": "ee5cea4a028037182ab0a7631ade7d95", "testCaseId": "ee5cea4a028037182ab0a7631ade7d95", "fullName": "ezi_backend_automation.test_partner_automation#test_user_flow", "labels": [{"name": "parentSuite", "value": "ezi_backend_automation"}, {"name": "suite", "value": "test_partner_automation"}, {"name": "host", "value": "Ravi"}, {"name": "thread", "value": "8272-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ezi_backend_automation.test_partner_automation"}]}