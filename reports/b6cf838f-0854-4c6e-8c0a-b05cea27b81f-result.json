{"name": "test_user_flow", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (1122, 1326)\n  (Session info: chrome=124.0.6367.119)\nStacktrace:\n\tGetHandleVerifier [0x00007FF718061502+60802]\n\t(No symbol) [0x00007FF717FDAC02]\n\t(No symbol) [0x00007FF717E97CE4]\n\t(No symbol) [0x00007FF717EEE877]\n\t(No symbol) [0x00007FF717EEC344]\n\t(No symbol) [0x00007FF717EE980A]\n\t(No symbol) [0x00007FF717EE89E2]\n\t(No symbol) [0x00007FF717EDAE8B]\n\t(No symbol) [0x00007FF717F0AB7A]\n\t(No symbol) [0x00007FF717EDA7C6]\n\t(No symbol) [0x00007FF717F0AD90]\n\t(No symbol) [0x00007FF717F2A224]\n\t(No symbol) [0x00007FF717F0A923]\n\t(No symbol) [0x00007FF717ED8FEC]\n\t(No symbol) [0x00007FF717ED9C21]\n\tGetHandleVerifier [0x00007FF71836411D+3217821]\n\tGetHandleVerifier [0x00007FF7183A60B7+3488055]\n\tGetHandleVerifier [0x00007FF71839F03F+3459263]\n\tGetHandleVerifier [0x00007FF71811B846+823494]\n\t(No symbol) [0x00007FF717FE5F9F]\n\t(No symbol) [0x00007FF717FE0EC4]\n\t(No symbol) [0x00007FF717FE1052]\n\t(No symbol) [0x00007FF717FD18A4]\n\tBaseThreadInitThunk [0x00007FFAD37B257D+29]\n\tRtlUserThreadStart [0x00007FFAD5ACAA48+40]", "trace": "def test_user_flow():\n        # Initialize the WebDriver (change the driver path as needed)\n        driver = webdriver.Chrome()\n    \n        try:\n>           execute_test_with_maximized_screen(driver)\n\nezi_front_end_automation\\test_user_flow.py:161: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nezi_front_end_automation\\test_user_flow.py:143: in execute_test_with_maximized_screen\n    click_physiotherapy=driver.find_element(By.XPATH,\"//a[@href='https://beta.ezi.ma/physiotherapy']//div[@class='card-body']\").click()\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001DD07591BD0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF717FD18A4]\\\\n\\\\tBaseThreadInitThunk [0x00007FFAD37B257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFAD5ACAA48+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (1122, 1326)\nE         (Session info: chrome=124.0.6367.119)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF718061502+60802]\nE       \t(No symbol) [0x00007FF717FDAC02]\nE       \t(No symbol) [0x00007FF717E97CE4]\nE       \t(No symbol) [0x00007FF717EEE877]\nE       \t(No symbol) [0x00007FF717EEC344]\nE       \t(No symbol) [0x00007FF717EE980A]\nE       \t(No symbol) [0x00007FF717EE89E2]\nE       \t(No symbol) [0x00007FF717EDAE8B]\nE       \t(No symbol) [0x00007FF717F0AB7A]\nE       \t(No symbol) [0x00007FF717EDA7C6]\nE       \t(No symbol) [0x00007FF717F0AD90]\nE       \t(No symbol) [0x00007FF717F2A224]\nE       \t(No symbol) [0x00007FF717F0A923]\nE       \t(No symbol) [0x00007FF717ED8FEC]\nE       \t(No symbol) [0x00007FF717ED9C21]\nE       \tGetHandleVerifier [0x00007FF71836411D+3217821]\nE       \tGetHandleVerifier [0x00007FF7183A60B7+3488055]\nE       \tGetHandleVerifier [0x00007FF71839F03F+3459263]\nE       \tGetHandleVerifier [0x00007FF71811B846+823494]\nE       \t(No symbol) [0x00007FF717FE5F9F]\nE       \t(No symbol) [0x00007FF717FE0EC4]\nE       \t(No symbol) [0x00007FF717FE1052]\nE       \t(No symbol) [0x00007FF717FD18A4]\nE       \tBaseThreadInitThunk [0x00007FFAD37B257D+29]\nE       \tRtlUserThreadStart [0x00007FFAD5ACAA48+40]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "attachments": [{"name": "siteload", "source": "6d6c38aa-7a76-42bb-bd1a-c479370713c6-attachment.png", "type": "image/png"}, {"name": "click_login_button", "source": "17d73e0d-2811-4921-a6c4-370311845613-attachment.png", "type": "image/png"}, {"name": "email and password", "source": "d230bb7c-0d12-47b2-9073-8b5d53c7cdf4-attachment.png", "type": "image/png"}, {"name": "after login", "source": "84e23869-e764-4d36-9881-21628d35542a-attachment.png", "type": "image/png"}, {"name": "my appointment page", "source": "88cfffa4-fb5e-4508-a409-1aaf5797b8cd-attachment.png", "type": "image/png"}, {"name": "past appointment page", "source": "0185aa87-fa72-4a47-b560-ef28bce35051-attachment.png", "type": "image/png"}, {"name": "my favourites page", "source": "5ddee391-c131-4fd6-ac1e-a4dbaf7a08ef-attachment.png", "type": "image/png"}, {"name": "my comment page", "source": "82e3acac-971e-4208-8373-442be7b6ece4-attachment.png", "type": "image/png"}, {"name": "my profile page", "source": "808b8997-6d27-4a2e-b2b4-e7587d669af7-attachment.png", "type": "image/png"}, {"name": "click register button", "source": "b23fd6b8-1f91-4efe-ae49-30d5184960e5-attachment.png", "type": "image/png"}, {"name": "On click redirect to home page", "source": "256777bf-2a1b-41b6-bb46-2badd050ccb7-attachment.png", "type": "image/png"}, {"name": "search salon", "source": "a11eb2e5-2fc5-435e-a728-21d4d82039f0-attachment.png", "type": "image/png"}, {"name": "search name", "source": "c18dce92-e506-4566-9e61-9fd4aad1f481-attachment.png", "type": "image/png"}, {"name": "redirect to search page", "source": "dca77f29-65a4-41de-a204-617c5c91d9a6-attachment.png", "type": "image/png"}, {"name": "selected hearicon", "source": "08752cad-7da6-4f92-b32e-6566aeb87f92-attachment.png", "type": "image/png"}, {"name": "haircut reserver button click", "source": "a13474f5-5e79-4865-af33-703a827a22ac-attachment.png", "type": "image/png"}, {"name": "professional click", "source": "b9404ffa-c30c-4d27-ba13-30b9b2ad9498-attachment.png", "type": "image/png"}, {"name": "select professional name", "source": "3dee2932-ef6e-44f6-9c62-d11a515406da-attachment.png", "type": "image/png"}, {"name": "click_add_a_service_afterwards", "source": "bf13498e-3f97-4d77-82cf-5c0796047954-attachment.png", "type": "image/png"}, {"name": "select_another_service", "source": "f9ae116d-c9e8-4ade-8964-48e826244aa9-attachment.png", "type": "image/png"}, {"name": "select_category_option", "source": "54c2e8e5-9069-451f-8353-bc34a6a9f1eb-attachment.png", "type": "image/png"}, {"name": "select_face_clean_shave", "source": "bd205457-443e-4642-a571-565262eb16b4-attachment.png", "type": "image/png"}, {"name": "select_date", "source": "20894182-1f13-4aff-81a9-d83ce41b78e8-attachment.png", "type": "image/png"}, {"name": "select_time", "source": "ab3f82cc-ad8e-4220-bbfd-d1b0229089a6-attachment.png", "type": "image/png"}, {"name": "date modifier page", "source": "a9280bac-8674-48af-9bf7-0989f562a97d-attachment.png", "type": "image/png"}, {"name": "click_complementry_textbox", "source": "d618e019-409d-42c8-8ab9-3429d888c06c-attachment.png", "type": "image/png"}, {"name": "click_confirm", "source": "710bd25a-b042-4a6d-af8e-26603bb5adf1-attachment.png", "type": "image/png"}, {"name": "click_show_appointment", "source": "c6ab0c57-50e3-48f9-9b3e-10187580f2f0-attachment.png", "type": "image/png"}, {"name": "Redirect to home page", "source": "6fa52eee-5ed1-4d5b-9e75-340f0bb4c901-attachment.png", "type": "image/png"}, {"name": "Redirect to face care category", "source": "68139b25-290f-43a3-b046-8228111b7f4f-attachment.png", "type": "image/png"}, {"name": "Redirect to beautiful service", "source": "2514132e-42c9-4a8a-9066-c79c39cbbffb-attachment.png", "type": "image/png"}, {"name": "Beautiful services page ss", "source": "70dc5aa9-fdfc-48f3-99de-1019c591af0c-attachment.png", "type": "image/png"}], "start": 1714887871193, "stop": 1714887965303, "uuid": "946ccc75-ad59-4b04-aadb-b38ae6a5a584", "historyId": "d964e673b68a67a41fe795f4f9df1629", "testCaseId": "d964e673b68a67a41fe795f4f9df1629", "fullName": "ezi_front_end_automation.test_user_flow#test_user_flow", "labels": [{"name": "parentSuite", "value": "ezi_front_end_automation"}, {"name": "suite", "value": "test_user_flow"}, {"name": "host", "value": "Ravi"}, {"name": "thread", "value": "5880-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ezi_front_end_automation.test_user_flow"}]}