{"name": "test_user_flow", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.JavascriptException: Message: javascript error: {\"status\":60,\"value\":\"[object HTMLOptionElement] has no size and location\"}\n  (Session info: chrome=124.0.6367.119)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6B36F1572+60802]\n\t(No symbol) [0x00007FF6B366AC72]\n\t(No symbol) [0x00007FF6B3527CE4]\n\t(No symbol) [0x00007FF6B352DE26]\n\t(No symbol) [0x00007FF6B35301DB]\n\t(No symbol) [0x00007FF6B3530280]\n\t(No symbol) [0x00007FF6B357DC9D]\n\t(No symbol) [0x00007FF6B357CF56]\n\t(No symbol) [0x00007FF6B35C430B]\n\t(No symbol) [0x00007FF6B359AB7A]\n\t(No symbol) [0x00007FF6B35BA224]\n\t(No symbol) [0x00007FF6B359A923]\n\t(No symbol) [0x00007FF6B3568FEC]\n\t(No symbol) [0x00007FF6B3569C21]\n\tGetHandleVerifier [0x00007FF6B39F420D+3217949]\n\tGetHandleVerifier [0x00007FF6B3A361A7+3488183]\n\tGetHandleVerifier [0x00007FF6B3A2F12F+3459391]\n\tGetHandleVerifier [0x00007FF6B37AB936+823622]\n\t(No symbol) [0x00007FF6B367600F]\n\t(No symbol) [0x00007FF6B3670F34]\n\t(No symbol) [0x00007FF6B36710C2]\n\t(No symbol) [0x00007FF6B3661914]\n\tBaseThreadInitThunk [0x00007FFAD400257D+29]\n\tRtlUserThreadStart [0x00007FFAD5E4AA48+40]", "trace": "def test_user_flow():\n        # Initialize the WebDriver (change the driver path as needed)\n        driver = webdriver.Chrome()\n    \n        try:\n>           execute_test_with_maximized_screen(driver)\n\nezi_backend_automation\\test_partner_automation.py:184: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nezi_backend_automation\\test_partner_automation.py:151: in execute_test_with_maximized_screen\n    ActionChains(driver).click(select_gendar).perform()\nvenv\\Lib\\site-packages\\selenium\\webdriver\\common\\action_chains.py:94: in perform\n    self.w3c_actions.perform()\nvenv\\Lib\\site-packages\\selenium\\webdriver\\common\\actions\\action_builder.py:96: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000027D3143D910>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"javascript error\",\"message\":\"javascript error: {\\\\\"status\\\\\":60,\\\\\"value\\...07FF6B3661914]\\\\n\\\\tBaseThreadInitThunk [0x00007FFAD400257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFAD5E4AA48+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.JavascriptException: Message: javascript error: {\"status\":60,\"value\":\"[object HTMLOptionElement] has no size and location\"}\nE         (Session info: chrome=124.0.6367.119)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6B36F1572+60802]\nE       \t(No symbol) [0x00007FF6B366AC72]\nE       \t(No symbol) [0x00007FF6B3527CE4]\nE       \t(No symbol) [0x00007FF6B352DE26]\nE       \t(No symbol) [0x00007FF6B35301DB]\nE       \t(No symbol) [0x00007FF6B3530280]\nE       \t(No symbol) [0x00007FF6B357DC9D]\nE       \t(No symbol) [0x00007FF6B357CF56]\nE       \t(No symbol) [0x00007FF6B35C430B]\nE       \t(No symbol) [0x00007FF6B359AB7A]\nE       \t(No symbol) [0x00007FF6B35BA224]\nE       \t(No symbol) [0x00007FF6B359A923]\nE       \t(No symbol) [0x00007FF6B3568FEC]\nE       \t(No symbol) [0x00007FF6B3569C21]\nE       \tGetHandleVerifier [0x00007FF6B39F420D+3217949]\nE       \tGetHandleVerifier [0x00007FF6B3A361A7+3488183]\nE       \tGetHandleVerifier [0x00007FF6B3A2F12F+3459391]\nE       \tGetHandleVerifier [0x00007FF6B37AB936+823622]\nE       \t(No symbol) [0x00007FF6B367600F]\nE       \t(No symbol) [0x00007FF6B3670F34]\nE       \t(No symbol) [0x00007FF6B36710C2]\nE       \t(No symbol) [0x00007FF6B3661914]\nE       \tBaseThreadInitThunk [0x00007FFAD400257D+29]\nE       \tRtlUserThreadStart [0x00007FFAD5E4AA48+40]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: JavascriptException"}, "attachments": [{"name": "siteload", "source": "e7b275ea-2649-446f-b55f-a0916ff13c85-attachment.png", "type": "image/png"}, {"name": "click_login_button", "source": "f83e904f-ee5e-46a6-b2a9-96edae74c579-attachment.png", "type": "image/png"}, {"name": "email and password", "source": "860a3704-a92e-4f73-a916-986d9969f281-attachment.png", "type": "image/png"}, {"name": "after login", "source": "c3545b5b-d580-4319-9b14-70805cefa84c-attachment.png", "type": "image/png"}, {"name": "click_employee drawer", "source": "35da8f37-bf3f-4e28-adf7-092884c17cff-attachment.png", "type": "image/png"}, {"name": "select_employee_name", "source": "f86e382e-6b1c-40a0-8d25-f231f6ca5293-attachment.png", "type": "image/png"}, {"name": "select_employee_name", "source": "c6749c8f-5d8e-4b0e-a361-7d35a1c4d7b3-attachment.png", "type": "image/png"}, {"name": "click_customer_button", "source": "36cd42c9-ec9b-4ae9-836d-afd22d9054c0-attachment.png", "type": "image/png"}, {"name": "click_importer_button", "source": "1d646cb6-7d17-4d6f-8772-831c0c4186ff-attachment.png", "type": "image/png"}, {"name": "click_download_button", "source": "295568dd-af54-4fa8-b0cb-4d6a3e530562-attachment.png", "type": "image/png"}, {"name": "click_client button", "source": "cedc1a09-e1f9-45e8-af45-72eeee5a6dd1-attachment.png", "type": "image/png"}, {"name": "search_partner_name", "source": "2df82b5e-e6b7-4564-8f06-55b8c2309c91-attachment.png", "type": "image/png"}, {"name": "click_search_name", "source": "7212f109-9c8f-4b68-b9ee-8b479e7884d5-attachment.png", "type": "image/png"}, {"name": " click_rendez_vous", "source": "98b4d4e3-d71e-44e0-a705-828dfab4721a-attachment.png", "type": "image/png"}, {"name": "click_commenter", "source": "deae308a-dc4c-4be4-a47d-b0acb96bc2cf-attachment.png", "type": "image/png"}, {"name": "click_in_regards", "source": "c8e023be-3ca8-4c70-b986-a668201b6b4e-attachment.png", "type": "image/png"}, {"name": "click_create_new_customer_icon", "source": "e1a85021-f7fb-4cf6-8f45-105b08630ca4-attachment.png", "type": "image/png"}, {"name": "above details capture screenshort", "source": "66e9b085-4ae9-46ae-886c-6210a9e2f7ea-attachment.png", "type": "image/png"}], "start": 1715245550431, "stop": 1715245605378, "uuid": "08c49ee3-27d0-4038-a84b-e56b3249b970", "historyId": "ee5cea4a028037182ab0a7631ade7d95", "testCaseId": "ee5cea4a028037182ab0a7631ade7d95", "fullName": "ezi_backend_automation.test_partner_automation#test_user_flow", "labels": [{"name": "parentSuite", "value": "ezi_backend_automation"}, {"name": "suite", "value": "test_partner_automation"}, {"name": "host", "value": "Ravi"}, {"name": "thread", "value": "8520-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ezi_backend_automation.test_partner_automation"}]}