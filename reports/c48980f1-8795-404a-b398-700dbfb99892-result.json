{"name": "test_user_flow", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=124.0.6367.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF78CE61502+60802]\n\t(No symbol) [0x00007FF78CDDAC02]\n\t(No symbol) [0x00007FF78CC97CE4]\n\t(No symbol) [0x00007FF78CC9DE26]\n\t(No symbol) [0x00007FF78CCA01DB]\n\t(No symbol) [0x00007FF78CCA0280]\n\t(No symbol) [0x00007FF78CCE8D14]\n\t(No symbol) [0x00007FF78CCE7D37]\n\t(No symbol) [0x00007FF78CCDAE8B]\n\t(No symbol) [0x00007FF78CD0AB7A]\n\t(No symbol) [0x00007FF78CCDA7C6]\n\t(No symbol) [0x00007FF78CD0AD90]\n\t(No symbol) [0x00007FF78CD2A224]\n\t(No symbol) [0x00007FF78CD0A923]\n\t(No symbol) [0x00007FF78CCD8FEC]\n\t(No symbol) [0x00007FF78CCD9C21]\n\tGetHandleVerifier [0x00007FF78D16411D+3217821]\n\tGetHandleVerifier [0x00007FF78D1A60B7+3488055]\n\tGetHandleVerifier [0x00007FF78D19F03F+3459263]\n\tGetHandleVerifier [0x00007FF78CF1B846+823494]\n\t(No symbol) [0x00007FF78CDE5F9F]\n\t(No symbol) [0x00007FF78CDE0EC4]\n\t(No symbol) [0x00007FF78CDE1052]\n\t(No symbol) [0x00007FF78CDD18A4]\n\tBaseThreadInitThunk [0x00007FFAD37B257D+29]\n\tRtlUserThreadStart [0x00007FFAD5ACAA48+40]", "trace": "def test_user_flow():\n        # Initialize the WebDriver (change the driver path as needed)\n        driver = webdriver.Chrome()\n    \n        try:\n>           execute_test_with_maximized_screen(driver)\n\nezi_front_end_automation\\test_user_flow.py:112: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nezi_front_end_automation\\test_user_flow.py:68: in execute_test_with_maximized_screen\n    click_search_name=driver.find_element(By.XPATH,\"//li[@class='list-group-item formulation_concentration_item getData']\").click()\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000019072973C50>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...07FF78CDD18A4]\\\\n\\\\tBaseThreadInitThunk [0x00007FFAD37B257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFAD5ACAA48+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=124.0.6367.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF78CE61502+60802]\nE       \t(No symbol) [0x00007FF78CDDAC02]\nE       \t(No symbol) [0x00007FF78CC97CE4]\nE       \t(No symbol) [0x00007FF78CC9DE26]\nE       \t(No symbol) [0x00007FF78CCA01DB]\nE       \t(No symbol) [0x00007FF78CCA0280]\nE       \t(No symbol) [0x00007FF78CCE8D14]\nE       \t(No symbol) [0x00007FF78CCE7D37]\nE       \t(No symbol) [0x00007FF78CCDAE8B]\nE       \t(No symbol) [0x00007FF78CD0AB7A]\nE       \t(No symbol) [0x00007FF78CCDA7C6]\nE       \t(No symbol) [0x00007FF78CD0AD90]\nE       \t(No symbol) [0x00007FF78CD2A224]\nE       \t(No symbol) [0x00007FF78CD0A923]\nE       \t(No symbol) [0x00007FF78CCD8FEC]\nE       \t(No symbol) [0x00007FF78CCD9C21]\nE       \tGetHandleVerifier [0x00007FF78D16411D+3217821]\nE       \tGetHandleVerifier [0x00007FF78D1A60B7+3488055]\nE       \tGetHandleVerifier [0x00007FF78D19F03F+3459263]\nE       \tGetHandleVerifier [0x00007FF78CF1B846+823494]\nE       \t(No symbol) [0x00007FF78CDE5F9F]\nE       \t(No symbol) [0x00007FF78CDE0EC4]\nE       \t(No symbol) [0x00007FF78CDE1052]\nE       \t(No symbol) [0x00007FF78CDD18A4]\nE       \tBaseThreadInitThunk [0x00007FFAD37B257D+29]\nE       \tRtlUserThreadStart [0x00007FFAD5ACAA48+40]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: StaleElementReferenceException"}, "attachments": [{"name": "siteload", "source": "bc563826-718a-4f3c-9c4a-87e87cbb711a-attachment.png", "type": "image/png"}, {"name": "click_login_button", "source": "a67fc85d-99bb-49e9-a784-4a453d0bf7d8-attachment.png", "type": "image/png"}, {"name": "email and password", "source": "a6c560f8-5606-486b-a66c-bc91b9ae8b5b-attachment.png", "type": "image/png"}, {"name": "after login", "source": "84f28a4b-4454-4c59-a182-c0ebb96f3c92-attachment.png", "type": "image/png"}, {"name": "my appointment page", "source": "a2c4c220-bdbf-49e7-beda-b630fb087fcf-attachment.png", "type": "image/png"}, {"name": "past appointment page", "source": "ca6f6b17-c4b1-4e89-8552-3c486de56c9e-attachment.png", "type": "image/png"}, {"name": "my favourites page", "source": "8b8a3ef2-67b2-4747-8c7c-3e2be29204c2-attachment.png", "type": "image/png"}, {"name": "my comment page", "source": "5dbe5fe4-0c07-44ec-8946-44b19fb51aba-attachment.png", "type": "image/png"}, {"name": "my profile page", "source": "2ee466da-3fe2-4f05-9320-f1ec143e0e4f-attachment.png", "type": "image/png"}, {"name": "click register button", "source": "c3fbda68-4242-40e8-8f84-cc439a4a7488-attachment.png", "type": "image/png"}, {"name": "On click redirect to home page", "source": "7da92284-c3e3-46db-9c06-c848ca95f9d5-attachment.png", "type": "image/png"}, {"name": "search salon", "source": "69ddb6f2-7542-49e9-b48b-3a4a60c8beeb-attachment.png", "type": "image/png"}], "start": 1714840756121, "stop": 1714840785411, "uuid": "090c83ee-7535-4f58-989f-856777150716", "historyId": "d964e673b68a67a41fe795f4f9df1629", "testCaseId": "d964e673b68a67a41fe795f4f9df1629", "fullName": "ezi_front_end_automation.test_user_flow#test_user_flow", "labels": [{"name": "parentSuite", "value": "ezi_front_end_automation"}, {"name": "suite", "value": "test_user_flow"}, {"name": "host", "value": "Ravi"}, {"name": "thread", "value": "11172-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ezi_front_end_automation.test_user_flow"}]}