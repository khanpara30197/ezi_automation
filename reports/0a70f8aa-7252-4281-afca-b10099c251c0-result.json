{"name": "test_user_flow", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (525, 1156)\n  (Session info: chrome=124.0.6367.119)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7DA521502+60802]\n\t(No symbol) [0x00007FF7DA49AC02]\n\t(No symbol) [0x00007FF7DA357CE4]\n\t(No symbol) [0x00007FF7DA3AE877]\n\t(No symbol) [0x00007FF7DA3AC344]\n\t(No symbol) [0x00007FF7DA3A980A]\n\t(No symbol) [0x00007FF7DA3A89E2]\n\t(No symbol) [0x00007FF7DA39AE8B]\n\t(No symbol) [0x00007FF7DA3CAB7A]\n\t(No symbol) [0x00007FF7DA39A7C6]\n\t(No symbol) [0x00007FF7DA3CAD90]\n\t(No symbol) [0x00007FF7DA3EA224]\n\t(No symbol) [0x00007FF7DA3CA923]\n\t(No symbol) [0x00007FF7DA398FEC]\n\t(No symbol) [0x00007FF7DA399C21]\n\tGetHandleVerifier [0x00007FF7DA82411D+3217821]\n\tGetHandleVerifier [0x00007FF7DA8660B7+3488055]\n\tGetHandleVerifier [0x00007FF7DA85F03F+3459263]\n\tGetHandleVerifier [0x00007FF7DA5DB846+823494]\n\t(No symbol) [0x00007FF7DA4A5F9F]\n\t(No symbol) [0x00007FF7DA4A0EC4]\n\t(No symbol) [0x00007FF7DA4A1052]\n\t(No symbol) [0x00007FF7DA4918A4]\n\tBaseThreadInitThunk [0x00007FFAD37B257D+29]\n\tRtlUserThreadStart [0x00007FFAD5ACAA48+40]", "trace": "def test_user_flow():\n        # Initialize the WebDriver (change the driver path as needed)\n        driver = webdriver.Chrome()\n    \n        try:\n>           execute_test_with_maximized_screen(driver)\n\nezi_front_end_automation\\test_user_flow.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nezi_front_end_automation\\test_user_flow.py:106: in execute_test_with_maximized_screen\n    select_time=driver.find_element(By.XPATH,\"//a[normalize-space()='11:15']\").click()\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000192C4AA33D0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF7DA4918A4]\\\\n\\\\tBaseThreadInitThunk [0x00007FFAD37B257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFAD5ACAA48+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (525, 1156)\nE         (Session info: chrome=124.0.6367.119)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7DA521502+60802]\nE       \t(No symbol) [0x00007FF7DA49AC02]\nE       \t(No symbol) [0x00007FF7DA357CE4]\nE       \t(No symbol) [0x00007FF7DA3AE877]\nE       \t(No symbol) [0x00007FF7DA3AC344]\nE       \t(No symbol) [0x00007FF7DA3A980A]\nE       \t(No symbol) [0x00007FF7DA3A89E2]\nE       \t(No symbol) [0x00007FF7DA39AE8B]\nE       \t(No symbol) [0x00007FF7DA3CAB7A]\nE       \t(No symbol) [0x00007FF7DA39A7C6]\nE       \t(No symbol) [0x00007FF7DA3CAD90]\nE       \t(No symbol) [0x00007FF7DA3EA224]\nE       \t(No symbol) [0x00007FF7DA3CA923]\nE       \t(No symbol) [0x00007FF7DA398FEC]\nE       \t(No symbol) [0x00007FF7DA399C21]\nE       \tGetHandleVerifier [0x00007FF7DA82411D+3217821]\nE       \tGetHandleVerifier [0x00007FF7DA8660B7+3488055]\nE       \tGetHandleVerifier [0x00007FF7DA85F03F+3459263]\nE       \tGetHandleVerifier [0x00007FF7DA5DB846+823494]\nE       \t(No symbol) [0x00007FF7DA4A5F9F]\nE       \t(No symbol) [0x00007FF7DA4A0EC4]\nE       \t(No symbol) [0x00007FF7DA4A1052]\nE       \t(No symbol) [0x00007FF7DA4918A4]\nE       \tBaseThreadInitThunk [0x00007FFAD37B257D+29]\nE       \tRtlUserThreadStart [0x00007FFAD5ACAA48+40]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "attachments": [{"name": "siteload", "source": "e48b0fe2-aa26-4f90-8a57-ef80573aa659-attachment.png", "type": "image/png"}, {"name": "click_login_button", "source": "ae2c49fb-7c8b-459f-8de0-3a35ba08334e-attachment.png", "type": "image/png"}, {"name": "email and password", "source": "7e436a83-4c5f-4c3a-8a80-ea1f76b101dc-attachment.png", "type": "image/png"}, {"name": "after login", "source": "967c868c-2109-4675-bbe8-0cf2dbaaa543-attachment.png", "type": "image/png"}, {"name": "my appointment page", "source": "16699ebb-480c-416e-9299-7f84cefe842d-attachment.png", "type": "image/png"}, {"name": "past appointment page", "source": "3a96511b-9fe5-49ad-a1be-bebb73bc6bb8-attachment.png", "type": "image/png"}, {"name": "my favourites page", "source": "4bac3923-02c1-4f10-a6a0-ebd839415ef9-attachment.png", "type": "image/png"}, {"name": "my comment page", "source": "ff2796c4-6216-4f2a-b39c-2d856f73fa81-attachment.png", "type": "image/png"}, {"name": "my profile page", "source": "1b0c1880-ba79-4fe8-b1b4-a59354aa7fd5-attachment.png", "type": "image/png"}, {"name": "click register button", "source": "c7cf68ed-90ea-4105-935b-2be5de85330b-attachment.png", "type": "image/png"}, {"name": "On click redirect to home page", "source": "12a8ed94-6c4a-4be6-ab22-01bf98c346e0-attachment.png", "type": "image/png"}, {"name": "search salon", "source": "270d2f81-458f-4918-a9ee-c7b94a36f3ee-attachment.png", "type": "image/png"}, {"name": "search name", "source": "9545e224-ba76-43fd-89c1-a8e0b38fd904-attachment.png", "type": "image/png"}, {"name": "redirect to search page", "source": "10c3a678-192d-4f95-95b5-071ae8fe5983-attachment.png", "type": "image/png"}, {"name": "selected hearicon", "source": "8c878acc-afe0-432b-b1ed-2880e8c829ff-attachment.png", "type": "image/png"}, {"name": "haircut reserver button click", "source": "77072255-3b00-41c2-8581-111cd7cae567-attachment.png", "type": "image/png"}, {"name": "professional click", "source": "4980d2ae-8980-4401-8d16-b571c71b46fc-attachment.png", "type": "image/png"}, {"name": "select professional name", "source": "82cb22e4-9617-4101-82e4-9fa68802cc5d-attachment.png", "type": "image/png"}, {"name": "click_add_a_service_afterwards", "source": "2ea0eb7c-72a6-44f9-b4ca-e4525ef7c24d-attachment.png", "type": "image/png"}, {"name": "select_another_service", "source": "dd9b444d-16f1-45a2-83c1-1c87f049becb-attachment.png", "type": "image/png"}, {"name": "select_category_option", "source": "e9341aef-19a8-48dc-b8d8-2a7383e10766-attachment.png", "type": "image/png"}, {"name": "select_face_clean_shave", "source": "093e4f3d-314d-4116-a324-c30e0e5c0822-attachment.png", "type": "image/png"}, {"name": "select_date", "source": "24b86973-bcac-4032-9907-d3251991de54-attachment.png", "type": "image/png"}], "start": 1714842767107, "stop": 1714842829238, "uuid": "6980a628-7346-4870-83d0-41f0a8d2b84f", "historyId": "d964e673b68a67a41fe795f4f9df1629", "testCaseId": "d964e673b68a67a41fe795f4f9df1629", "fullName": "ezi_front_end_automation.test_user_flow#test_user_flow", "labels": [{"name": "parentSuite", "value": "ezi_front_end_automation"}, {"name": "suite", "value": "test_user_flow"}, {"name": "host", "value": "Ravi"}, {"name": "thread", "value": "16188-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ezi_front_end_automation.test_user_flow"}]}