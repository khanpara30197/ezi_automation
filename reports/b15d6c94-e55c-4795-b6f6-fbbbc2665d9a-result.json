{"name": "test_user_flow", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[name=\"name\"]\"}\n  (Session info: chrome=124.0.6367.201); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF68E511562+60802]\n\t(No symbol) [0x00007FF68E48AC62]\n\t(No symbol) [0x00007FF68E347CE4]\n\t(No symbol) [0x00007FF68E396D4D]\n\t(No symbol) [0x00007FF68E396E1C]\n\t(No symbol) [0x00007FF68E3DCE37]\n\t(No symbol) [0x00007FF68E3BABBF]\n\t(No symbol) [0x00007FF68E3DA224]\n\t(No symbol) [0x00007FF68E3BA923]\n\t(No symbol) [0x00007FF68E388FEC]\n\t(No symbol) [0x00007FF68E389C21]\n\tGetHandleVerifier [0x00007FF68E8141FD+3217949]\n\tGetHandleVerifier [0x00007FF68E856197+3488183]\n\tGetHandleVerifier [0x00007FF68E84F11F+3459391]\n\tGetHandleVerifier [0x00007FF68E5CB926+823622]\n\t(No symbol) [0x00007FF68E495FFF]\n\t(No symbol) [0x00007FF68E490F24]\n\t(No symbol) [0x00007FF68E4910B2]\n\t(No symbol) [0x00007FF68E481904]\n\tBaseThreadInitThunk [0x00007FFAD400257D+29]\n\tRtlUserThreadStart [0x00007FFAD5E4AA48+40]", "trace": "def test_user_flow():\n        # Initialize the WebDriver (change the driver path as needed)\n        driver = webdriver.Chrome()\n    \n        try:\n>           execute_test_with_maximized_screen(driver)\n\nezi_backend_automation\\test_partner_automation.py:255: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nezi_backend_automation\\test_partner_automation.py:140: in execute_test_with_maximized_screen\n    click_firstname_box=driver.find_element(By.NAME,\"name\").clear()\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000014F7D2D1FD0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF68E481904]\\\\n\\\\tBaseThreadInitThunk [0x00007FFAD400257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFAD5E4AA48+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[name=\"name\"]\"}\nE         (Session info: chrome=124.0.6367.201); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF68E511562+60802]\nE       \t(No symbol) [0x00007FF68E48AC62]\nE       \t(No symbol) [0x00007FF68E347CE4]\nE       \t(No symbol) [0x00007FF68E396D4D]\nE       \t(No symbol) [0x00007FF68E396E1C]\nE       \t(No symbol) [0x00007FF68E3DCE37]\nE       \t(No symbol) [0x00007FF68E3BABBF]\nE       \t(No symbol) [0x00007FF68E3DA224]\nE       \t(No symbol) [0x00007FF68E3BA923]\nE       \t(No symbol) [0x00007FF68E388FEC]\nE       \t(No symbol) [0x00007FF68E389C21]\nE       \tGetHandleVerifier [0x00007FF68E8141FD+3217949]\nE       \tGetHandleVerifier [0x00007FF68E856197+3488183]\nE       \tGetHandleVerifier [0x00007FF68E84F11F+3459391]\nE       \tGetHandleVerifier [0x00007FF68E5CB926+823622]\nE       \t(No symbol) [0x00007FF68E495FFF]\nE       \t(No symbol) [0x00007FF68E490F24]\nE       \t(No symbol) [0x00007FF68E4910B2]\nE       \t(No symbol) [0x00007FF68E481904]\nE       \tBaseThreadInitThunk [0x00007FFAD400257D+29]\nE       \tRtlUserThreadStart [0x00007FFAD5E4AA48+40]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "attachments": [{"name": "siteload", "source": "928ee4d9-d4c4-4ae0-83de-94ebaf2b144f-attachment.png", "type": "image/png"}, {"name": "click_login_button", "source": "f23dc69f-15f7-4fd3-988b-bd0859d36279-attachment.png", "type": "image/png"}, {"name": "email and password", "source": "c785a217-2af2-425a-b38c-324e6de32899-attachment.png", "type": "image/png"}, {"name": "after login", "source": "9e771637-693e-4fce-9e10-faa79c720a3e-attachment.png", "type": "image/png"}, {"name": "click_employee drawer", "source": "17b147f7-cdfb-4194-95ff-c9266668ab45-attachment.png", "type": "image/png"}, {"name": "select_employee_name", "source": "dc2af283-4dee-4e3b-9ce1-ae2e18dd7ccf-attachment.png", "type": "image/png"}, {"name": "select_employee_name", "source": "fd559562-5ca5-43de-b6d0-94a36f0ff77d-attachment.png", "type": "image/png"}, {"name": "click_customer_button", "source": "301224a8-8589-44cb-87fb-5022dd1136be-attachment.png", "type": "image/png"}, {"name": "click_importer_button", "source": "6796e9a7-b5f9-4b48-90c8-09b42349fcf5-attachment.png", "type": "image/png"}, {"name": "click_download_button", "source": "d1871611-3c0d-463c-85d5-ad973d953663-attachment.png", "type": "image/png"}, {"name": "click_client button", "source": "2da53e1f-dd2b-4130-a5bc-6f129abc3451-attachment.png", "type": "image/png"}, {"name": "search_partner_name", "source": "949ad92f-3fd4-4d77-8ae9-e95973168b86-attachment.png", "type": "image/png"}, {"name": "click_search_name", "source": "f3068a28-45d8-4813-ac41-f5a63e71e6a0-attachment.png", "type": "image/png"}, {"name": " click_rendez_vous", "source": "1b54e4bc-fb81-4a62-8306-0dab43c4e92b-attachment.png", "type": "image/png"}, {"name": "click_commenter", "source": "3bb5562e-48a1-4f4a-b19d-72356e67a9e7-attachment.png", "type": "image/png"}, {"name": "click_in_regards", "source": "1cd3928c-0679-4a56-aac2-108e52738fab-attachment.png", "type": "image/png"}, {"name": "click_edit_customer_details", "source": "78a57d18-6b72-4272-99f8-71e9da3d3439-attachment.png", "type": "image/png"}], "start": 1715530526936, "stop": 1715530594831, "uuid": "ab4ad6b3-e53a-4fd7-b407-0efc444e79ff", "historyId": "ee5cea4a028037182ab0a7631ade7d95", "testCaseId": "ee5cea4a028037182ab0a7631ade7d95", "fullName": "ezi_backend_automation.test_partner_automation#test_user_flow", "labels": [{"name": "parentSuite", "value": "ezi_backend_automation"}, {"name": "suite", "value": "test_partner_automation"}, {"name": "host", "value": "Ravi"}, {"name": "thread", "value": "24996-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ezi_backend_automation.test_partner_automation"}]}